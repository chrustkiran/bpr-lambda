org: bprbackend
app: bpr-lambda
service: bpr-lambda

plugins:
  - serverless-offline
  - serverless-dynamodb-local


custom:
  accountId:
    dev: '123456'
    prod: '123' #'${aws:accountId}'
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      seed: true
      migrate: true
      inMemory: true
    seed:
      dev:
        sources:
          - table: CustomersTable_${sls:stage}
            sources: [db-migration/users.json]
    options:
      endpoint: http://localhost:8000

provider:
  name: aws
  runtime: nodejs20.x
  stage: dev
  environment:
      STAGE: ${sls:stage}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:PutItem"
        - "dynamodb:Get*"
        - "dynamodb:Scan*"
        - "dynamodb:UpdateItem"
        - "dynamodb:DeleteItem"
      Resource: arn:aws:dynamodb:${aws:region}:${self:custom.accountId.${sls:stage}}:table/*
functions:
  searchCustomer:
    handler: src/controllers/customerController.searchCustomer
    events:
      - httpApi:
          path: /customer/search
          method: post
  getAllCustomers:
    handler: src/controllers/customerController.getAllCustomers
    events: 
      - httpApi:
          path: /customers
          method: get
resources:
  Resources:
     UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: CustomersTable_${sls:stage}
        AttributeDefinitions:
          - AttributeName: UserID
            AttributeType: S
          - AttributeName: FirstName
            AttributeType: S
          - AttributeName: LastName
            AttributeType: S
          - AttributeName: PhoneNumber
            AttributeType: S 
        KeySchema:
          - AttributeName: UserID
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: FirstNameIndex
            KeySchema:
              - AttributeName: FirstName
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 10
              WriteCapacityUnits: 5
          - IndexName: LastNameIndex
            KeySchema:
              - AttributeName: LastName
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 10
              WriteCapacityUnits: 5
          - IndexName: PhoneNumberIndex
            KeySchema:
              - AttributeName: PhoneNumber
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 10
              WriteCapacityUnits: 5
        ProvisionedThroughput:
              ReadCapacityUnits: 10
              WriteCapacityUnits: 5
    #  VehiclesTable:
    #   Type: AWS::DynamoDB::Table
    #   Properties:
    #     TableName: Vehicles
    #     AttributeDefinitions:
    #       - AttributeName: VehicleNumber
    #         AttributeType: S
    #       - AttributeName: UserID
    #         AttributeType: S
    #       - AttributeName: Model
    #         AttributeType: S
    #       - AttributeName: Make
    #         AttributeType: S
    #       - AttributeName: Year
    #         AttributeType: N
    #     KeySchema:
    #       - AttributeName: VehicleNumber
    #         KeyType: HASH
    #     GlobalSecondaryIndexes:
    #       - IndexName: UserIDIndex
    #         KeySchema:
    #           - AttributeName: UserID
    #             KeyType: HASH
    #         Projection:
    #           ProjectionType: ALL
    #     BillingMode: PAYPERREQUEST  # Use on-demand billing